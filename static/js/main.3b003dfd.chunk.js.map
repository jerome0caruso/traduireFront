{"version":3,"sources":["componets/LogOut.js","componets/NavBar.js","componets/Input.js","componets/Output.js","componets/LanguageSelector1.js","componets/LanguageSelector2.js","views/MainPage.js","views/Login.js","views/MyAccount.js","views/Register.js","views/Home.js","images/robot.png","componets/DeleteCard.js","componets/UpdateCard.js","views/MyCards.js","views/loggedOut.js","views/EachAccount.js","App.js","reportWebVitals.js","index.js"],"names":["Logout","props","logout","a","setLoggedIn","fetch","method","then","res","json","data","console","log","localStorage","setItem","JSON","stringify","catch","err","window","location","reload","type","onClick","className","NavBar","loggedIn","to","id","href","role","currentUser","class","MainInput","toBeTranslated","setToBeTranslated","handleSubmit","clearFields","flashCardsTranslation","isLoadingHandler","hasError","Container","Row","Col","Form","onChange","e","target","value","placeholder","resize","Button","variant","MainOutput","handleClear","onSubmit","LanguageSelector1","handleLanguage1","Select","LanguageSelector2","handleLanguage2","MainPage","setLanguage1","setLanguage2","isLoading","active","spinner","text","Login","useState","isValid","setIsValid","logIn","preventDefault","username","password","encodedString","btoa","myHeaders","Headers","append","headers","setCurrentUser","getLocalStorage","defaultValue","htmlFor","name","MyAccout","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","Footer","formData","userId","body","deleteUser","Register","setHasError","userError","setUserError","passError","setPassError","pass2Error","setPass2Error","emailError","setEmailError","serverError","setServerError","navigate","useNavigate","handleChange","confirmPass","pw1","pw2","email","length","test","String","toLowerCase","filterUser","Home","DeleteCard","setDeleteOrUpdate","cardId","newCardList","tCards","filter","card","setTCards","deleteCard","cardToBeDeleted","UpdateCard","input","setInput","cardToBeUpdated","onInput","updatedInfo","updatedCard","oldArray","forEach","updateCard","MyCards","setCardToBeDeleted","setCardToBeUpdated","deleteOrUpdate","useEffect","map","element","i","cardNote","setCardNote","LoggedOut","EachAccount","error","setError","u","LanguageTranslatorV3","require","IamAuthenticator","App","flashCards","setFlashCards","getLoggedIn","getItem","parse","getUserIn","language1","language2","setIsLoading","languageTranslator","version","authenticator","apikey","serviceUrl","translateParams","modelId","translate","translationResult","translation","result","translations","cleanInput","cleanedTranslation","includes","slice","path","exact","default","document","getElementById","mainInput","Math","random","cards","translated","starterWord","getUser","MyAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b003dfd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Navigate  } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logout = (props) => {\r\n    \r\n    const logout = async() => {\r\n        props.setLoggedIn(false)\r\n        await fetch('https://traduireapi.herokuapp.com/logout', {\r\n            method: 'GET',\r\n        }).then(res =>  res.json())\r\n          .then(data => {\r\n            console.log(data)\r\n            localStorage.setItem('isLoggedIn', JSON.stringify(false));\r\n            localStorage.setItem('user', JSON.stringify({}));\r\n         }).catch(err => console.log(err))\r\n         window.location.reload(false);\r\n    } \r\n    \r\n\r\n    return (\r\n            <div>\r\n                <button type=\"submit\" onClick={logout} className='btn btn-primary'>Logout</button>\r\n            </div>\r\n    )\r\n}\r\nexport default Logout;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from './LogOut';\r\nimport { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nconst NavBar = (props) => {\r\n\r\n  console.log(props)\r\n    return (\r\n      props.loggedIn ? (\r\n        <nav className=\"navbar navbar-expand-lg navBar text-white\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to={`/myAccount`}>Traduire</Link>\r\n            <button className=\"navbar-toggler navBarIcon\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon navBarIcon\"><i className=\"fa fa-bars\"></i></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">Game</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\">Links</a>\r\n                </li>\r\n              </ul>\r\n              <form className=\"d-flex dropdown\">\r\n                <li className=\"nav-item dropdown\">\r\n                  <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    Dropdown\r\n                  </a>\r\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <li><Link className=\"dropdown-item\" to={`/myAccount${props.currentUser.id}`}>My Account</Link></li>\r\n                    <li><Link className=\"dropdown-item\" to={`/myCards${props.currentUser.id}`}>My Flash Cards</Link></li>\r\n                    <li><hr className=\"dropdown-divider\"/></li>\r\n                    <li className=\"logoutButton\"><Link to=\"/home\"><Logout loggedIn={props.loggedIn} setLoggedIn={props.setLoggedIn}/></Link></li>\r\n                  </ul>\r\n                </li>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        ) \r\n        : \r\n      (\r\n        <nav className=\"navbar navbar-expand-lg navBar\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">Traduire</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon navBarIcon\"><i class=\"fa fa-bars\"></i></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/login\">LogIn</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      )\r\n      \r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// {\r\n//     \"apikey\": \"_JUAqXHLMJ6XLeZJFiDxPtf1gT_3XZk7yKYu03gbV2cm\",\r\n//     \"iam_apikey_description\": \"Auto-generated for key 2efef6e3-0194-4e08-915d-83ec404fcb59\",\r\n//     \"iam_apikey_name\": \"Auto-generated service credentials\",\r\n//     \"iam_role_crn\": \"crn:v1:bluemix:public:iam::::serviceRole:Manager\",\r\n//     \"iam_serviceid_crn\": \"crn:v1:bluemix:public:iam-identity::a/18dcda956a5148659730b6d44953855b::serviceid:ServiceId-6d8d2215-46e4-4455-9e0b-16cdb5f25564\",\r\n//     \"url\": \"https://api.us-south.language-translator.watson.cloud.ibm.com/instances/efe12cd6-da34-44e7-9ea5-15f947aec94d\"\r\n//   }\r\n\r\n\r\n\r\n// import json\r\n// from ibm_watson import LanguageTranslatorV3\r\n// from ibm_cloud_sdk_core.authenticators import IAMAuthenticator\r\n\r\n// authenticator = IAMAuthenticator('_JUAqXHLMJ6XLeZJFiDxPtf1gT_3XZk7yKYu03gbV2cm')\r\n// language_translator = LanguageTranslatorV3(\r\n//     version='2018-05-01',\r\n//     authenticator=authenticator\r\n// )\r\n\r\n// language_translator.set_service_url('https://api.us-south.language-translator.watson.cloud.ibm.com/instances/efe12cd6-da34-44e7-9ea5-15f947aec94d')\r\n\r\n// translation = language_translator.translate(\r\n//     text='Hello?',\r\n//     model_id='en-es').get_result()\r\n// // print(json.dumps(translation, indent=2, ensure_ascii=False))","import React from 'react';\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\nconst MainInput = ({toBeTranslated, setToBeTranslated, handleSubmit, clearFields, flashCardsTranslation, isLoadingHandler, hasError }) => {\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col>\r\n                                <textarea\r\n                                type=\"text\"\r\n                                id=\"mainInput\"\r\n                                onChange={(e) => setToBeTranslated(e.target.value)}\r\n                                placeholder=\"Enter a word\"\r\n                                resize=\"false\"\r\n                                />\r\n                            </Col>\r\n                            <Col className=\"mainBtn\">\r\n                                <Button type=\"Submit\" onClick={(e) => { isLoadingHandler(); handleSubmit(e)} } variant=\"primary\">Search</Button>\r\n                                <Button  onClick={flashCardsTranslation} variant=\"primary\">Save</Button>\r\n                                <Button type=\"Submit\" onClick={clearFields} variant=\"primary\">Clear</Button>\r\n                                {hasError ? (<div className=\"errorBox\">\r\n                                    <p>I didn't find that, try using a different word/phrase or try using an article before the word/phrase.</p>\r\n                                </div>): null }\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        )\r\n}\r\n\r\nexport default MainInput;","import React from 'react';\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport '../App.css';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nconst MainOutput = ({toBeTranslated, setToBeTranslated, handleClear}) => {\r\n    console.log(toBeTranslated)\r\n    \r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col>\r\n                    <Form onSubmit={handleClear}>\r\n                        <Row>\r\n                            <Col>\r\n                                <textarea\r\n                                type=\"text\"\r\n                                id=\"mainOutput\"\r\n                                value={toBeTranslated}\r\n                                placeholder=\"Word translated\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        )\r\n}\r\n\r\nexport default MainOutput;","import { Form } from 'react-bootstrap';\r\nimport '../App.css';\r\nconst LanguageSelector1 = ({ handleLanguage1 }) => {\r\n\r\n    return (\r\n        <div className=\"lSelector\">\r\n            <Form.Select aria-label=\"Default select example\" onChange={(e) => handleLanguage1(e)}>\r\n                <option>Languages</option>\r\n                <option value=\"en\">English</option>\r\n                <option value=\"fr\">French</option>\r\n                <option value=\"es\">Spanish</option>\r\n                <option value=\"it\">Italian</option>\r\n                <option value=\"de\">German</option>\r\n                <option value=\"ar\">Arabic</option>\r\n                <option value=\"bn\">Bengali</option>\r\n                <option value=\"bs\">Bosnian</option>\r\n                <option value=\"bg\">Bulgarian</option>\r\n                <option value=\"zh-TW\">Chinese</option>\r\n                <option value=\"hr\">Croatian</option>\r\n                <option value=\"cs\">Czech</option>\r\n                <option value=\"nl\">Danish</option>\r\n                <option value=\"en\">Dutch</option>\r\n                <option value=\"et\">Estonian</option>\r\n                <option value=\"fi\">Finnish</option>\r\n                <option value=\"fr\">Greek</option>\r\n                <option value=\"gu\">Gujarati</option>\r\n                <option value=\"he\">Hebrew</option>\r\n                <option value=\"hi\">Hindi</option>\r\n                <option value=\"hu\">Hungarian</option>\r\n                <option value=\"ga\">Irish</option>\r\n                <option value=\"id\">Indonesian</option>\r\n                <option value=\"ja\">Japanese</option>\r\n                <option value=\"ko\">Korean</option>\r\n                <option value=\"lv\">Latvian</option>\r\n                <option value=\"lt\">Lithuanian</option>\r\n                <option value=\"ms\">Malay</option>\r\n                <option value=\"ml\">Malayalam</option>\r\n                <option value=\"mt\">Maltese</option>\r\n                <option value=\"ne\">Nepali</option>\r\n                <option value=\"nb\">Norwegian</option>\r\n                <option value=\"pl\">Polish</option>\r\n                <option value=\"pt\">Portuguese</option>\r\n                <option value=\"ro\">Romanian</option>\r\n                <option value=\"ru\">Russian</option>\r\n                <option value=\"sr\">Serbian</option>\r\n                <option value=\"si\">Sinhala</option>\r\n                <option value=\"es\">Spanish</option>\r\n                <option value=\"sk\">Slovak</option>\r\n                <option value=\"sl\">Slovenian</option>\r\n                <option value=\"sv\">Swedish</option>\r\n                <option value=\"ta\">Tamil</option>\r\n                <option value=\"te\">Telugu</option>\r\n                <option value=\"th\">Thai</option>\r\n                <option value=\"tr\">Turkish</option>\r\n                <option value=\"uk\">Ukrainian</option>\r\n                <option value=\"ur\">Urdu</option>\r\n                <option value=\"vi\">Vietnamese</option>\r\n                <option value=\"cy\">Welsh</option>\r\n            </Form.Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageSelector1;","import { Form } from 'react-bootstrap';\r\nimport '../App.css';\r\nconst LanguageSelector2 = ({ handleLanguage2 }) => {\r\n\r\n    return (\r\n        <div className=\"rSelector\">\r\n            <Form.Select aria-label=\"Default select example\" onChange={(e) => handleLanguage2(e)}>\r\n                <option>Languages</option>\r\n                <option value=\"en\">English</option>\r\n                <option value=\"fr\">French</option>\r\n                <option value=\"es\">Spanish</option>\r\n                <option value=\"it\">Italian</option>\r\n                <option value=\"de\">German</option>\r\n                <option value=\"ar\">Arabic</option>\r\n                <option value=\"bn\">Bengali</option>\r\n                <option value=\"bs\">Bosnian</option>\r\n                <option value=\"bg\">Bulgarian</option>\r\n                <option value=\"zh-TW\">Chinese</option>\r\n                <option value=\"hr\">Croatian</option>\r\n                <option value=\"cs\">Czech</option>\r\n                <option value=\"nl\">Danish</option>\r\n                <option value=\"en\">Dutch</option>\r\n                <option value=\"et\">Estonian</option>\r\n                <option value=\"fi\">Finnish</option>\r\n                <option value=\"fr\">Greek</option>\r\n                <option value=\"gu\">Gujarati</option>\r\n                <option value=\"he\">Hebrew</option>\r\n                <option value=\"hi\">Hindi</option>\r\n                <option value=\"hu\">Hungarian</option>\r\n                <option value=\"ga\">Irish</option>\r\n                <option value=\"id\">Indonesian</option>\r\n                <option value=\"ja\">Japanese</option>\r\n                <option value=\"ko\">Korean</option>\r\n                <option value=\"lv\">Latvian</option>\r\n                <option value=\"lt\">Lithuanian</option>\r\n                <option value=\"ms\">Malay</option>\r\n                <option value=\"ml\">Malayalam</option>\r\n                <option value=\"mt\">Maltese</option>\r\n                <option value=\"ne\">Nepali</option>\r\n                <option value=\"nb\">Norwegian</option>\r\n                <option value=\"pl\">Polish</option>\r\n                <option value=\"pt\">Portuguese</option>\r\n                <option value=\"ro\">Romanian</option>\r\n                <option value=\"ru\">Russian</option>\r\n                <option value=\"sr\">Serbian</option>\r\n                <option value=\"si\">Sinhala</option>\r\n                <option value=\"es\">Spanish</option>\r\n                <option value=\"sk\">Slovak</option>\r\n                <option value=\"sl\">Slovenian</option>\r\n                <option value=\"sv\">Swedish</option>\r\n                <option value=\"ta\">Tamil</option>\r\n                <option value=\"te\">Telugu</option>\r\n                <option value=\"th\">Thai</option>\r\n                <option value=\"tr\">Turkish</option>\r\n                <option value=\"uk\">Ukrainian</option>\r\n                <option value=\"ur\">Urdu</option>\r\n                <option value=\"vi\">Vietnamese</option>\r\n                <option value=\"cy\">Welsh</option>\r\n            </Form.Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageSelector2;","import '../App.css';\r\nimport MainInput from '../componets/Input';\r\nimport MainOutput from '../componets/Output';\r\nimport LanguageSelector1 from '../componets/LanguageSelector1';\r\nimport LanguageSelector2 from '../componets/LanguageSelector2';\r\n\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\n\r\nconst MainPage = ({toBeTranslated, setToBeTranslated, handleSubmit, clearFields, flashCardsTranslation, setLanguage1, setLanguage2, isLoading, isLoadingHandler, hasError   }) => {\r\n  const handleLanguage1 = (e) => {\r\n    setLanguage1(e.target.value);\r\n    handleSubmit(e);\r\n  }\r\n  const handleLanguage2 = (e) => {\r\n    setLanguage2(e.target.value);\r\n    handleSubmit(e);\r\n  }\r\n    return (\r\n\r\n        <div className=\"appContainer text-center\">\r\n\r\n        <h1 className=\"mainHeading\">Traduire</h1>\r\n        <div className=\"input-container \">\r\n          <div className=\"eachInputContainer\">\r\n            <LanguageSelector1 handleLanguage1={handleLanguage1}/>\r\n            <MainInput\r\n              toBeTranslated={toBeTranslated}\r\n              setToBeTranslated={setToBeTranslated}\r\n              handleSubmit={handleSubmit}\r\n              clearFields={clearFields}\r\n              flashCardsTranslation={flashCardsTranslation}\r\n              isLoadingHandler={isLoadingHandler}\r\n              hasError={hasError}\r\n               />\r\n          </div>\r\n\r\n          <div className=\"eachInputContainer\">\r\n            <LanguageSelector2 handleLanguage2={handleLanguage2}/>\r\n            <LoadingOverlay active={isLoading} spinner text='Loading your content...'>\r\n              <MainOutput toBeTranslated={toBeTranslated} setToBeTranslated={setToBeTranslated} clearFields={clearFields} />\r\n            </LoadingOverlay>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n        )\r\n}\r\n\r\nexport default MainPage;","import React, { useState } from 'react'\r\nimport { Navigate  } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n    const [isValid, setIsValid] = useState(true)\r\n    \r\n    const logIn = async(e) => {\r\n        e.preventDefault();\r\n        let username = e.target.username.value;\r\n        let password = e.target.password.value;\r\n        let encodedString = btoa(`${username}:${password}`)\r\n        let myHeaders = new Headers();\r\n        myHeaders.append('Authorization', `Basic ${encodedString}`)\r\n    \r\n         await fetch('https://traduireapi.herokuapp.com/login', {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n        }).then(res =>res.json())\r\n          .then(data => {\r\n              console.log(data)\r\n            if(data === \"Invalid\" || data === false) {\r\n                props.setLoggedIn(false)\r\n                setIsValid(false)\r\n            } else {\r\n                props.setCurrentUser(data[1])\r\n                props.setLoggedIn(true)\r\n                setIsValid(true)\r\n                props.getLocalStorage()\r\n            }\r\n\r\n         }).catch(err => console.log(err))\r\n    }\r\n    console.log(props.loggedIn)\r\n    return (\r\n        props.loggedIn ? <Navigate to={`/${props.currentUser.id}`} /> : isValid ? \r\n        <div className=\"container my-5 loginContainer\">\r\n        <form className=\"form\" defaultValue=\"form\" onSubmit={logIn}>\r\n            <h3 className='text-center'>Login Here</h3>\r\n            <div className='form-group'>\r\n                <fieldset>\r\n                    <label htmlFor='username'>Username</label>\r\n                    <input type='text' className='form-control' name='username' defaultValue=\"Username\" />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input type='password' className='form-control' name='password' defaultValue=\"Password\" />\r\n                </fieldset>\r\n                <input type='submit' className='btn btn-primary' defaultValue=\"Login\" />\r\n            </div>\r\n        </form>\r\n        </div> :\r\n            <div className=\"container loginContainer my-5\">\r\n            <form className=\"form\" defaultValue=\"form\" onSubmit={logIn}>\r\n                \r\n                <h3 className='text-center'>Login Here</h3>\r\n                <h5 className=\"errorMessage\">Your username or password is incorrect.  Please try again.</h5>\r\n                <div className='form-group'>\r\n                    <fieldset>\r\n                        <label htmlFor='username'>Username</label>\r\n                        <input type='text' className='form-control' name='username' defaultValue=\"Username\" />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input type='password' className='form-control' name='password' defaultValue=\"Password\" />\r\n                    </fieldset>\r\n                    <input type='submit' className='btn btnls btn-primary' defaultValue=\"Login\" />\r\n                </div>\r\n            </form>\r\n            </div>\r\n        \r\n    )\r\n}\r\nexport default Login;","import '../App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { Modal, Button} from 'react-bootstrap';\r\n//import { useNavigate } from 'react-router-dom';\r\n\r\nconst MyAccout = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    //const navigate = useNavigate();\r\n\r\n    const deleteUser = () => {\r\n        let formData = {\r\n            userId: props.currentUser['id']\r\n        }\r\n        const body = JSON.stringify(formData);\r\n        fetch(`https://traduireapi.herokuapp.com/delete${props.currentUser['id']}`, {\r\n            method: 'DELETE',\r\n            body: body,\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data, 'redirect')\r\n    \r\n            })\r\n    \r\n       //navigate('/home');\r\n        window.location.href = \"/home\";\r\n    }\r\n    \r\n    return (\r\n        <div className=\"myAccountContainer\">\r\n            <div className=\"container myAccoutInnerContainer\">\r\n                <h1>Hello {props.currentUser['username']}</h1>\r\n                <h2>UserName: {props.currentUser['username']}</h2>\r\n                <h2>Email: {props.currentUser['email']}</h2>\r\n                <h2>UserId: {props.currentUser['id']} </h2>\r\n                <div>\r\n                <Link to=\"/eachAccount\" className=\"btn editBtn btn-primary mx-3\">Edit</Link>\r\n                <Button to=\"/deleteAccount\" className=\"btn btn-danger\" onClick={ handleShow }>Delete</Button>\r\n                </div>\r\n            </div>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete Account</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure that you want to delete this account?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => { handleClose(); deleteUser();}}>\r\n                    Delete Account\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MyAccout;","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\nimport '../index.css';\r\n\r\nconst Register = () => {\r\n    const [hasError, setHasError] = useState(false);\r\n    const [userError, setUserError] = useState('');\r\n    const [passError, setPassError] = useState('');\r\n    const [pass2Error, setPass2Error] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [serverError, setServerError] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    const filterUser = (username, pw1, pw2, email) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(username.length < 3 || username.length > 15) {\r\n            setHasError(true);\r\n            setUserError('Username is not vaild!');\r\n        }\r\n        if (pw1 !== pw2) {\r\n            setHasError(true);\r\n            setPassError('Passowords did not match!');\r\n        }\r\n        if (pw1.length < 3) {\r\n            setHasError(true);\r\n            setPass2Error('Passoword not valid!');\r\n        }\r\n\r\n        if(re.test(String(email).toLowerCase()) === false){\r\n            setHasError(true);\r\n            setEmailError('Email is not not valid!');\r\n        }\r\n\r\n    }\r\n    const handleChange = () => {\r\n        setHasError(false);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        console.log(\"trying to submit\", hasError)\r\n        e.preventDefault();\r\n        const password = e.target.password.value;\r\n        const confirmPass = e.target.confirmPass.value;\r\n        const username = e.target.username.value;\r\n        const email = e.target.email.value;\r\n        filterUser(username, password, confirmPass, email);\r\n        if (hasError === false) {\r\n            console.log('Form Submitted!');\r\n            let myHeaders =  new Headers();\r\n            myHeaders.append('Content-Type', 'application/json');\r\n            let data = JSON.stringify({\r\n                username: e.target.username.value,\r\n                email: e.target.email.value,\r\n                password: e.target.password.value\r\n            })\r\n            fetch('https://traduireapi.herokuapp.com/signup', {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: data\r\n            }).then(res => res.json())\r\n              .then(data => {\r\n                if(data['error']) {\r\n                    setHasError(true)\r\n                    setServerError(data['error'])\r\n                } else {\r\n                    navigate('/login');\r\n                }\r\n              })\r\n              .catch(err => console.log(err))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"registerContainer container\">\r\n            <div className=\"formContainer\">\r\n                <form className=\"form\" onSubmit={handleSubmit} >\r\n                    <h3 className='text-center'>Register Here</h3>\r\n                    <h4 className=\"errorMessage\"> {serverError}</h4>\r\n                    <div className='form-group'>\r\n                        <fieldset>\r\n                        <h4 className=\"errorMessage\"> {userError}</h4>\r\n                            <label htmlFor='username'>Username</label>\r\n                            <input onChange={handleChange} type='text' name='username' className='form-control' placeholder='Username' />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                        <h4 className=\"errorMessage\"> {emailError}</h4>\r\n                            <label htmlFor='email'>Email</label>\r\n                            <input type='text' onChange={handleChange} name='email' className='form-control' placeholder='Email' />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                        <h4 className=\"errorMessage\"> {pass2Error}</h4>\r\n                            <label htmlFor='password'>Password</label>\r\n                            <input type='password' onChange={handleChange}  name='password' className='form-control' placeholder='Password' />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                        <h4 className=\"errorMessage\"> {passError}</h4>\r\n                            <label htmlFor='confirmPass'>Confirm Password</label>\r\n                            <input type='password' name='confirmPass' onChange={handleChange}  className='form-control' placeholder='Confirm Password' />\r\n                        </fieldset>\r\n                        <input type='submit' className='btn btnls btn-secondary' />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"formCriContainer\">\r\n                <ul>\r\n                    <li><p>Username must be at least 3 characters</p></li>\r\n                    <li>Username must be less than 15 characters</li>\r\n                    <li>Password must be at least 3 characters</li>\r\n                    <li>only email.example.com formats are considered valid</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Register;","import pic1 from '../images/robot.png';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"container mainContainer\">\r\n            <div className=\"firstPage\">\r\n                <div className=\"firstPage-pic\">\r\n                    <i class=\"fas fa-robot\"></i>\r\n                </div>\r\n                <div className=\"firstPage-words\">\r\n                    <h1>Welcome to Traduire!</h1>\r\n                    <h2>Using IBM Watson to do your translations we hope to give you the best translation. Come and start learning now!</h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"firstPage-btns\">\r\n                <button className=\"btn btn-primary btn-login\" ><Link to=\"/login\">Login</Link></button>\r\n                <button className=\"btn btn-warning btn-register\"><Link to=\"/register\">Register</Link></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/robot.9558aac5.png\";","import { Modal, Button} from 'react-bootstrap';\r\nimport React, { useState} from 'react'\r\n\r\nconst DeleteCard = (props) => {\r\n    const [show, setShow] = useState(true);\r\n    const handleClose = () => {setShow(false); props.setDeleteOrUpdate('');}\r\n\r\n\r\n    const deleteCard = (cardId) => {\r\n        console.log(cardId)\r\n    const newCardList = props.tCards.filter(card => card[0] !== cardId);\r\n        props.setTCards(newCardList);\r\n        let formData = {\r\n            cardId: cardId,\r\n            userId: props.currentUser['id']\r\n        }\r\n        const body = JSON.stringify(formData);\r\n        fetch(`https://traduireapi.herokuapp.com/delete/card${cardId}`, {\r\n            method: 'DELETE',\r\n            body: body,\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data, 'redirect')\r\n            }) \r\n    }\r\n\r\nreturn (\r\n    <Modal show={show} onHide={handleClose}>, \r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Delete Card</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure that you want to delete this card?</Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => { handleClose(); deleteCard(props.cardToBeDeleted);}}>\r\n                Delete Card\r\n            </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n    )\r\n}\r\n\r\nexport default DeleteCard;","import { Modal, Button } from 'react-bootstrap';\r\nimport React, { useState, useEffect} from 'react'\r\n\r\nconst UpdateCard = (props) => {\r\n    const [show, setShow] = useState(true);\r\n    const handleClose = () =>  {setShow(false); props.setDeleteOrUpdate('');}\r\n    const [input, setInput] = useState('');\r\n\r\n    const updateCard = (cardId) => {\r\n        let formData = {\r\n            cardId: cardId,\r\n            userId: props.currentUser['id'],\r\n            updatedInfo: input\r\n        }\r\n        const body = JSON.stringify(formData);\r\n        fetch(`https://traduireapi.herokuapp.com/updateCard/card${cardId}`, {\r\n            method: 'PUT',\r\n            body: body,\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                //update the card notes from the return from the DB\r\n                const updatedCard = data[1];\r\n                console.log(updatedCard)\r\n                const oldArray = [...props.tCards];\r\n                oldArray.forEach(card => {\r\n                    if(card[0] === updatedCard['cardId']) {\r\n                        card[3] = updatedCard['updatedInfo'];\r\n                    }\r\n                })\r\n                console.log(props.tCards, oldArray);\r\n                props.setTCards(oldArray);\r\n            })\r\n    }\r\n\r\nreturn (\r\n    <Modal show={show} onHide={handleClose}>, \r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Update Card</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <form>\r\n                <fieldset>\r\n                    <label htmlFor='notes'>Enter your notes here: </label>\r\n                    <input type='text' name='notes' id={props.cardToBeUpdated} className='form-control' value={input} onInput={(e) => setInput(e.target.value)} placeholder='Notes...' />\r\n                </fieldset>\r\n            </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => { handleClose(); updateCard(props.cardToBeUpdated);}}>\r\n                Update Card\r\n            </Button>\r\n        </Modal.Footer>\r\n    </Modal>)\r\n\r\n}\r\n\r\nexport default UpdateCard;","import React, { useState, useEffect} from 'react'\r\nimport DeleteCard from '../componets/DeleteCard';\r\nimport UpdateCard from '../componets/UpdateCard';\r\n\r\nconst MyCards = (props) => {\r\n    const [tCards, setTCards] = useState([]);\r\n    const [cardToBeDeleted, setCardToBeDeleted] = useState('');\r\n    const [cardToBeUpdated, setCardToBeUpdated] = useState('');\r\n    const [deleteOrUpdate, setDeleteOrUpdate] = useState('');\r\n    const [input, setInput] = useState('');\r\n    \r\n    useEffect(() => {\r\n        fetch(`https://traduireapi.herokuapp.com/getCards${props.currentUser['id']}`, {\r\n            method: 'GET'\r\n        }).then(res => res.json())\r\n          .then(data => {\r\n              console.log(data)\r\n              setTCards(data)\r\n         }).catch(err => console.log(err))\r\n            }, [])\r\n\r\n    const handleCardToDelete = (id) => {\r\n        setCardToBeDeleted(id)\r\n    }\r\n    const handleCardToUpdated = (id) => {\r\n        setCardToBeUpdated(id)\r\n    }\r\n    const handleCardUpdate = (comp) => {\r\n        setDeleteOrUpdate(comp)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className='container card text-center d-flex justify-content-center my-5 flex-column align-items-center'>\r\n                <h1 className=\"my-5 flashMessage\">FlashCards</h1>\r\n                <div className=\"cardlistContainer\">\r\n                    {tCards.map((element, i) => {\r\n                        return (\r\n                        <div className=\"card mx-1 w-50\" key={i}>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{element[1]}</h5>\r\n                                <h5 className=\"card-title\">{element[2]}</h5>\r\n                                <p className=\"card-text\">{ element[3] }</p>\r\n                                <button onClick={() => { handleCardUpdate('update'); handleCardToUpdated(element[0])} }>Edit</button><button onClick={() => { setDeleteOrUpdate('delete'); handleCardToDelete(element[0])} }>Delete</button>\r\n                                { deleteOrUpdate === 'delete' ? <DeleteCard currentUser={props.currentUser} cardToBeDeleted={cardToBeDeleted} tCards={tCards} setTCards={setTCards} deleteOrUpdate={deleteOrUpdate} setDeleteOrUpdate={setDeleteOrUpdate}/> : null }\r\n                                {deleteOrUpdate === 'update' ? <UpdateCard currentUser={props.currentUser} cardToBeUpdated={cardToBeUpdated} cardNote={props.cardNote} setCardNote={props.setCardNote} deleteOrUpdate={deleteOrUpdate} setDeleteOrUpdate={setDeleteOrUpdate} cardNote={props.cardNote} setCardNote={props.setCardNote} input={input} setInput={setInput} tCards={tCards} setTCards={setTCards}/> : null}\r\n                            </div>\r\n                        </div>)})}\r\n                </div>\r\n            </div>\r\n        \r\n        </>\r\n        )\r\n\r\n}\r\n\r\nexport default MyCards;","const LoggedOut = () => {\r\n    return (\r\n        <h1>Thanks for visiting</h1>\r\n    )\r\n}\r\n\r\nexport default LoggedOut;","import { useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst EachAccount = (props) => {\r\n    const [error, setError] = useState(false);\r\n    const navigate = useNavigate();\r\n    console.log(props.currentUser);\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"editing\")\r\n        const username = e.target.u.value\r\n        const email = e.target.e.value\r\n        \r\n        let formData = {\r\n            id: props.currentUser['id'],\r\n            username: username,\r\n            email: email\r\n        }\r\n        const body = JSON.stringify(formData);\r\n        fetch(`https://traduireapi.herokuapp.com/update${props.currentUser['id']}`, {\r\n            method: 'PUT',\r\n            body: body,\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if(data['error']) {\r\n                   setError(true);\r\n                } else {\r\n                    props.setCurrentUser(data[1]);\r\n                    localStorage.setItem('user', JSON.stringify(props.currentUser));\r\n                    navigate(`/myAccount:${props.currentUser['id']}`)\r\n                }\r\n\r\n            }).catch(err => {console.log(err)})\r\n        }\r\n    return (\r\n        <div className=\"container w-25\">\r\n            <form onSubmit={handleEdit}>\r\n                <h6 className='text-center flashMessage'>Edit User {props.u}</h6>\r\n                {error ? <h5 className=\"errorMessage\">Your username or email is already in use,  Please try a different phrase.</h5> : null}\r\n                <div className='form-group'>\r\n                    <fieldset>\r\n                        <label htmlFor='u'>Username</label>\r\n                        <input type='text' className='form-control' name='u' defaultValue={props.u}/>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <label htmlFor='e'>Email</label>\r\n                        <input type='text' className='form-control' name='e' defaultValue={props.e}/>\r\n                    </fieldset>\r\n                    <input type='submit' className='btn btn-dark' value='Update User'/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachAccount;","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport NavBar from './componets/NavBar';\r\nimport MainPage from './views/MainPage';\r\nimport Login from './views/Login';\r\nimport MyAccount from './views/MyAccount';\r\nimport Register from './views/Register';\r\nimport Home from './views/Home'\r\nimport MyCards from './views/MyCards';\r\nimport { Route, BrowserRouter, Routes } from 'react-router-dom';\r\nimport LoggedOut from './views/loggedOut';\r\nimport EachAccount from './views/EachAccount';\r\n\r\n\r\nconst LanguageTranslatorV3 = require('ibm-watson/language-translator/v3');\r\nconst { IamAuthenticator } = require('ibm-watson/auth');\r\n\r\nfunction App() {\r\n  const [flashCards, setFlashCards] = useState([]);\r\n  const [toBeTranslated, setToBeTranslated] = useState('');\r\n  const [cardNote, setCardNote] = useState('This is for card notes');\r\n  const getLoggedIn = localStorage.getItem('isLoggedIn');\r\n  const [loggedIn, setLoggedIn] = useState(JSON.parse(getLoggedIn));\r\n  const getUserIn = localStorage.getItem('user');\r\n  const [currentUser, setCurrentUser] = useState(JSON.parse(getUserIn));\r\n  const [language1, setLanguage1] = useState('');\r\n  const [language2, setLanguage2] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n \r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('user', JSON.stringify(currentUser));\r\n  },[currentUser])\r\n\r\n  const getLocalStorage = () => {\r\n    localStorage.setItem('isLoggedIn', String(true));\r\n    const getUser = localStorage.getItem('user');\r\n    setCurrentUser(JSON.parse(getUser));\r\n  }\r\n  const isLoadingHandler = () => {\r\n    //make sure to only load on word/phrase search not before\r\n    if(toBeTranslated !== '') {\r\n      setIsLoading(true);\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    console.log(language1, language2)\r\n    e.preventDefault();\r\n    if(toBeTranslated !== '') {\r\n      //get translation\r\n      const languageTranslator = new LanguageTranslatorV3({\r\n        version: '2018-05-01',\r\n        authenticator: new IamAuthenticator({\r\n          apikey: 'GcbUMxxRnA2TPAz8HICyogh0nEUsWSV9zAXSdTUNbkO_'\r\n          // apikey: '_JUAqXHLMJ6XLeZJFiDxPtf1gT_3XZk7yKYu03gbV2cm'\r\n        }),\r\n        serviceUrl: 'https://api.us-south.language-translator.watson.cloud.ibm.com/instances/efe12cd6-da34-44e7-9ea5-15f947aec94d',\r\n      });\r\n      const translateParams = {\r\n        text: `${toBeTranslated.toLowerCase()}?`,\r\n        modelId: `${language1}-${language2}`,\r\n      };\r\n      await languageTranslator.translate(translateParams)\r\n        .then(translationResult => {\r\n          const translation = translationResult.result.translations[0].translation;\r\n          cleanInput(translation);\r\n          setIsLoading(false);\r\n        })\r\n        .catch(err => {\r\n          if(language1 && language2) {\r\n            setHasError(true);\r\n          }\r\n          \r\n          console.log('error:', err); //This is to handle models not found!!!!\r\n        });\r\n    }\r\n}  \r\n  const cleanInput = (translation) => {\r\n    let cleanedTranslation;\r\n    if(translation.includes('¿') && translation.includes('?')) {\r\n      cleanedTranslation = translation.slice(1, translation.length -1);\r\n    } else if(translation.includes('?')) {\r\n      cleanedTranslation = translation.slice(0, translation.length -1);\r\n    } else if(translation.includes('¿')) {\r\n      cleanedTranslation = translation.slice(1);\r\n    } else {\r\n      cleanedTranslation = translation;\r\n    }\r\n    if (cleanedTranslation.toLowerCase() == toBeTranslated){\r\n      setHasError(true);\r\n    } else {\r\n      setHasError(false);\r\n    }\r\n    setToBeTranslated(cleanedTranslation);\r\n  }\r\n\r\n  //writes the word to the database\r\n  const flashCardsTranslation = () => {\r\n    const mainInput = document.getElementById('mainInput');\r\n    const cardId = Math.random(0, 10000000)\r\n    setFlashCards([[toBeTranslated, mainInput.value], ...flashCards]);\r\n  \r\n    let myHeaders =  new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n    let data = JSON.stringify({\r\n        cards: {\r\n          userId: currentUser.id,\r\n          translated: toBeTranslated,\r\n          starterWord: mainInput.value,\r\n          cardNote: cardNote,\r\n          cardId: cardId\r\n        }\r\n    })\r\n    fetch('https://traduireapi.herokuapp.com/cards', {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: data\r\n    }).then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n      })\r\n      .catch(err => console.log(err))\r\n    }\r\n    //clears the input fields\r\n    const clearFields = (e) => {   \r\n      e.preventDefault();\r\n      const mainInput = document.getElementById('mainInput');\r\n      mainInput.value = '';\r\n      setToBeTranslated(\"\");\r\n      setHasError(false);\r\n    }\r\n  return (\r\n      <BrowserRouter>\r\n        <NavBar loggedIn={loggedIn} setLoggedIn={setLoggedIn} currentUser={currentUser} setCurrentUser={setCurrentUser} />\r\n        <Routes>\r\n            <Route path='/' exact={true} element={<Home />} />\r\n            <Route default path='/home' element={<Home />}/>\r\n            <Route className=\"appContainer\" path='/:id' element={ \r\n                <MainPage\r\n                  toBeTranslated={toBeTranslated}\r\n                  setToBeTranslated={setToBeTranslated}\r\n                  handleSubmit={handleSubmit}\r\n                  clearFields={clearFields}\r\n                  flashCardsTranslation={flashCardsTranslation}\r\n                  setLanguage1={setLanguage1}\r\n                  setLanguage2={setLanguage2}\r\n                  isLoading={isLoading}\r\n                  isLoadingHandler={isLoadingHandler}\r\n                  hasError={hasError}\r\n                />\r\n              }>\r\n            </Route >\r\n          <Route path='/login' element={\r\n              <Login loggedIn={loggedIn} \r\n                getLocalStorage={getLocalStorage} \r\n                setLoggedIn={setLoggedIn} \r\n                currentUser={currentUser} \r\n                setCurrentUser={setCurrentUser}\r\n              />\r\n            }>\r\n          </Route>\r\n          <Route path='/loggedout' element={ <LoggedOut/> }></Route>\r\n          <Route path='/myAccount:id' element={ <MyAccount currentUser={currentUser} setCurrentUser={setCurrentUser}/> }></Route>\r\n          <Route path='/myCards:id' element={ \r\n            <MyCards flashCards={flashCards}  \r\n              currentUser={currentUser}  \r\n              setFlashCards={setFlashCards} \r\n              toBeTranslated={toBeTranslated}\r\n              cardNote={cardNote}\r\n              setCardNote={setCardNote}\r\n            />} />\r\n          <Route path='/register' element={ <Register />} />\r\n          <Route path='/eachAccount' element={ <EachAccount currentUser={currentUser} setCurrentUser={setCurrentUser}/>} />\r\n        </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}